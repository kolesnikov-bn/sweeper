[tool.poetry]
name = "sweeper"
version = "0.1.0"
description = ""
authors = ["Boris <kolesnikoff.bn@gmail.com>"]

[tool.poetry.dependencies]
python = "^3.11"
pydantic = "^1.10.2"
loguru = "^0.6.0"
pyinstaller = { version = "^5.6.2", python = "~3.11" }
pyobjc-framework-Cocoa = "^9.0"
dependency-injector = "^4.40.0"

[tool.poetry.dev-dependencies]
mypy = "^0.991"
pytest = "^7.1.1"
black = "^22.3.0"
isort = "^5.10.1"
hypothesis = "^6.58.1"
pytest-cov = "^4.0.0"
pytest-sugar = "^0.9.4"
pytest-icdiff = "^0.6"
wemake-python-styleguide = "^0.17.0"
pre-commit = "^2.16.0"
tox = "^3.24.5"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
sweep = "sweeper.main:main"

[tool.isort]
profile = "black"
# https://github.com/timothycrosley/isort/wiki/isort-Settings
include_trailing_comma = true
multi_line_output = 3
use_parentheses = true
# See https://github.com/timothycrosley/isort#multi-line-output-modes
line_length = 120

[tool.black]
line-length = 120

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "raise NotImplementedError",
    # Don't complain if non-runnable code isn't run:
    "if TYPE_CHECKING:",
    # Don't complain ABC method
    "@abstractmethod",
    "raise AssertionError",
]

[tool.coverage.run]
omit = [
    "sweeper/main.py",
]


[tool.pytest.ini_options]
# Directories that are not visited by pytest collector:
norecursedirs = [
    "sweeper/infrastructure/settings",
    "hooks",
    "dist",
    "build",
    "docs",
    ".tox",
    ".git",
    "__pycache__",
]
# Extra options:
addopts = "--strict-markers --tb=short -rsxX -l"
testpaths = ["tests"]

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = begin,py310,end
isolated_build = True
skipsdist = true

[testenv]
whitelist_externals = poetry
deps =
    pytest
    pytest-cov

commands =
    poetry install -v
    poetry run pytest --strict-markers --tb=short -rsxX -l --cov=sweeper/app tests

[testenv:begin]
commands = poetry run coverage erase

[testenv:end]
commands =
    poetry run coverage xml

[testenv:linter]
deps =
    flake8
    flake8-bugbear
    flake8-builtins
    flake8-comprehensions
    flake8-string-format
    black

commands =
    flake8 sweeper/app
    black --check .

"""
